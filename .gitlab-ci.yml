stages:
  - debug
  - build
  - test
  - keep-artifact
  - cleanup

variables:
  IMAGE_NAME: "simple-web-app"
  CONTAINER_NAME: "PythonApp"
  FULL_IMAGE_NAME: $CI_REGISTRY/root/simplepyapp/$IMAGE_NAME:$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA 


default:
  tags:
    - my_first_runner
    
test-builtin-job:
  stage: debug
  image: hashicorp/vault:latest
      variables:
        VAULT_ADDR: $VAULT_ADDR
        VAULT_AUTH_ROLE: $VAULT_AUTH_ROLE
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=$VAULT_AUTH_ROLE jwt=$CI_JOB_JWT)"
    - export MY_SECRET="$(vault kv get -mount=infinity/homework -field=Assignment MySecret)"
    - echo $MY_SECRET

build-job:
  stage: build
  script: docker build -t $FULL_IMAGE_NAME . 

run-job:
  stage: build
  script: docker run -p 5000:5000 -d --name $CONTAINER_NAME $FULL_IMAGE_NAME

test-job:
  stage: test
  script: curl localhost:5000

artifact-job:
  stage: keep-artifact
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $FULL_IMAGE_NAME
    - docker logout

cleanup_job:
  stage: cleanup
  script:
    - docker stop $CONTAINER_NAME
    - docker rm $CONTAINER_NAME
    - docker rmi $FULL_IMAGE_NAME
    - docker system prune -f
  when: always
